:ruby
  # always leave the possibility of coding something up there ;)

-# .s20
.clear

.abso
  .line
  .block{ data: { block_count: block_count-4 } }= block_count-4
  .line
  .block{ data: { block_count: block_count-3 } }= block_count-3
  .line
  .block{ data: { block_count: block_count-2 } }= block_count-2
  .line
  .block{ data: { block_count: block_count-1 } }= block_count-1
  .line
  .block{ data: { block_count: block_count   }  }= block_count
  .line_dot
  .block_dot
.spacer_viz

%h3
  %span Block:
  %span.block_number
    = block_count
  %span -
  %span.hash
    #{hash.sub /^0+/, ''}

.blocks_data.hidden{ data: { latest_block: block_count }, type: "text/x-handlebars-template" }


-# TODO: add moment.js for the time.ago
%script.tx_template{ type: "text/x-handlebars-template" }
  :plain
    <h4>Block info:</h4>
    <p>Time: {{time}}</p>
    <p>Confirmations: {{confirmations}}</p>
    <p>Size: {{size}}</p>
    <h4>Transactions ({{tx_count}})</h4>
    {{#each tx}}
      <div class='tx'><a href='/txs/{{this}}'>{{this}}</a></div>
    {{/each}}


.transactions

- content_for :js do
  - capture_haml do
    :coffee

      window.onpopstate = (evt) ->
        state = evt.state
        block_num = state.block_num if state
        unless block_num
          load_latest_block()
        else
          load_transactions block_num

      # TODO: change name from .tx_template to .block_info
      tx_template = $(".tx_template").html()
      tx_template = Handlebars.compile(tx_template)

      load_latest_block = (block_num) ->
        $.getJSON "/api/blocks_latest_num", (data) ->
          block_num = data.block_num
          load_transactions block_num

      load_transactions = (block_num) ->
        $.getJSON "/api/blocks/"+block_num, (data) ->
          # console.log "got block", data
          block = data.block
          block.tx_count = block.tx.length
          html = tx_template block
          $(".transactions").html html
          $(".hash").html block.hash.replace /^0+/, ''
          $(".block_number").html block_num

      $(".block").on "click", (evt) ->
        elem = evt.target
        block_count = elem.dataset.blockCount
        block_num = block_count
        load_transactions block_num
        history.pushState({ block_num: block_num }, "Block #\#{block_num}", "/blocks/\#{block_num}")

      load_transactions $('.blocks_data').data("latest-block")

%p page rendering time: #{Time.now - @time}

-# txs = w.listsinceblock
